{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Umesh Gupta\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, this.props.stream.title);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  //console.log(ownProps);\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps)(StreamEdit);","map":{"version":3,"sources":["C:/Users/Umesh Gupta/streams/client/src/components/streams/StreamEdit.js"],"names":["React","connect","fetchStream","editStream","StreamEdit","Component","componentDidMount","props","match","params","id","render","stream","title","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACrCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKJ,KAAL,CAAWK,MAAX,CAAkBC,KAAxB,CADJ;AAGH;;AARoC;;AAWzC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC;AACA,SAAO;AAAEJ,IAAAA,MAAM,EAAEG,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACH,CAHD;;AAKA,eAAeT,OAAO,CAACa,eAAD,CAAP,CAAyBV,UAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStream, editStream } from '../../actions';\r\n\r\nclass StreamEdit extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>{this.props.stream.title}</div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    //console.log(ownProps);\r\n    return { stream: state.streams[ownProps.match.params.id] };\r\n};\r\n\r\nexport default connect(mapStateToProps)(StreamEdit);"]},"metadata":{},"sourceType":"module"}