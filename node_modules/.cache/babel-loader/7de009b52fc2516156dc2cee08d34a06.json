{"ast":null,"code":"import _ from 'lodash';\nimport { CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, EDIT_STREAM, DELETE_STREAM } from '../actions/types';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case FETCH_STREAMS:\n      return { ...state,\n        ..._.mapKeys(action.payload.id, 'id')\n      };\n\n    case FETCH_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case CREATE_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case EDIT_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case DELETE_STREAM:\n      //no need to reference action.payload.id here as the payload is id itself in action.\n      return _.omit(state, action.payload);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Umesh Gupta/streams/client/src/reducers/streamReducer.js"],"names":["_","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","EDIT_STREAM","DELETE_STREAM","state","action","type","mapKeys","payload","id","omit"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SACIC,aADJ,EAEIC,aAFJ,EAGIC,YAHJ,EAIIC,WAJJ,EAKIC,aALJ,QAMO,kBANP;AAQA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,aAAL;AACI,aAAO,EAAE,GAAGI,KAAL;AAAY,WAAGN,CAAC,CAACS,OAAF,CAAUF,MAAM,CAACG,OAAP,CAAeC,EAAzB,EAA6B,IAA7B;AAAf,OAAP;;AACJ,SAAKR,YAAL;AACI,aAAO,EAAE,GAAGG,KAAL;AAAY,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAxC,OAAP;;AACJ,SAAKT,aAAL;AACI,aAAO,EAAE,GAAGK,KAAL;AAAY,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAxC,OAAP;;AACJ,SAAKN,WAAL;AACI,aAAO,EAAE,GAAGE,KAAL;AAAY,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAxC,OAAP;;AACJ,SAAKL,aAAL;AACI;AACA,aAAOL,CAAC,CAACY,IAAF,CAAON,KAAP,EAAcC,MAAM,CAACG,OAArB,CAAP;;AACJ;AACI,aAAOJ,KAAP;AAbR;AAeH,CAhBD","sourcesContent":["import _ from 'lodash';\r\nimport {\r\n    CREATE_STREAM,\r\n    FETCH_STREAMS,\r\n    FETCH_STREAM,\r\n    EDIT_STREAM,\r\n    DELETE_STREAM\r\n} from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case FETCH_STREAMS:\r\n            return { ...state, ..._.mapKeys(action.payload.id, 'id') };\r\n        case FETCH_STREAM: \r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case CREATE_STREAM: \r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case EDIT_STREAM:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case DELETE_STREAM:\r\n            //no need to reference action.payload.id here as the payload is id itself in action.\r\n            return _.omit(state, action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}